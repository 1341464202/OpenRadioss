// --- define_transformation.cfg ---

ATTRIBUTES(COMMON)
{
  transformations_count                   = SIZE("");
  transformations                          = ARRAY[transformations_count](TRANSFORMATION, "Transformations");

  //HM INTERNAL
  KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
  LSD_TitleOpt                            = VALUE(INT,    "Title Flag");
  vectorbytwonodes                        = VALUE(INT,    "vector by two nodes");

  IO_FLAG                                 = VALUE(INT,    "");
  TITLE                                   = VALUE(STRING, "HEADING");
  _rotateOption                           = VALUE(STRING, "");
  _opt                                    = VALUE(STRING, "");
  _dummy_config                           = VALUE(STRING, "config value");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
  //INPUT ATTTIBUTES
  KEYWORD_STR                             = 9000;
  LSD_TitleOpt                            = 90;

  IO_FLAG                                 = -1;
  TITLE                                   = -1;
  _rotateOption                           = -1;
  _opt                                    = -1;
  _dummy_config                           = -1;
}

GUI(COMMON)
{
  ASSIGN(KEYWORD_STR, "*DEFINE_TRANSFORMATION");

  FLAG(LSD_TitleOpt, "Title Flag");
  if(LSD_TitleOpt == 1)
  {
    ASSIGN(KEYWORD_STR, "_TITLE");
  }

}
FORMAT(Keyword971_R11.2)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    if(IO_FLAG == 0)
    {
        if(LSD_TitleOpt == 1)
        {
            HEADER("*DEFINE_TRANSFORMATION_TITLE");
        }
        else
        {
            HEADER("*DEFINE_TRANSFORMATION");
        }
    }
    else
    {
        HEADER("*DEFINE_TRANSFORMATION%20s",_opt);
        //ID Flag
        ASSIGN(LSD_TitleOpt,_FIND(_opt,"_TITLE"),IMPORT);
    }
    if(LSD_TitleOpt == 1)
    {
        CARD("%-80s", TITLE);
    }
    COMMENT("$   TRANID");
    CARD("%10d", _ID_);
    SUBOBJECTS(transformations,/SUBOBJECT/TRANSFORMATION);
}
FORMAT(Keyword971_R10.1)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    if(IO_FLAG == 0)
    {
        if(LSD_TitleOpt == 1)
        {
            HEADER("*DEFINE_TRANSFORMATION_TITLE");
        }
        else
        {
            HEADER("*DEFINE_TRANSFORMATION");
        }
    }
    else
    {
        HEADER("*DEFINE_TRANSFORMATION%20s",_opt);
        //ID Flag
        ASSIGN(LSD_TitleOpt,_FIND(_opt,"_TITLE"),IMPORT);
    }
    if(LSD_TitleOpt == 1)
    {
        CARD("%-80s", TITLE);
    }
    COMMENT("$   TRANID");
    CARD("%10d", _ID_);
    SUBOBJECTS(transformations,/SUBOBJECT/TRANSFORMATION);
}

FORMAT(Keyword971_R9.3)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    if(IO_FLAG == 0)
    {
        if(LSD_TitleOpt == 1)
        {
            HEADER("*DEFINE_TRANSFORMATION_TITLE");
        }
        else
        {
            HEADER("*DEFINE_TRANSFORMATION");
        }
    }
    else
    {
        HEADER("*DEFINE_TRANSFORMATION%20s",_opt);
        //ID Flag
        ASSIGN(LSD_TitleOpt,_FIND(_opt,"_TITLE"),IMPORT);
    }
    if(LSD_TitleOpt == 1)
    {
        CARD("%-80s", TITLE);
    }
    COMMENT("$   TRANID");
    CARD("%10d", _ID_);
    SUBOBJECTS(transformations,/SUBOBJECT/TRANSFORMATION);
}

FORMAT(Keyword971)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    if(IO_FLAG == 0)
    {
        if(LSD_TitleOpt == 1)
        {
            HEADER("*DEFINE_TRANSFORMATION_TITLE");
        }
        else
        {
            HEADER("*DEFINE_TRANSFORMATION");
        }
    }
    else
    {
        HEADER("*DEFINE_TRANSFORMATION%20s",_opt);
        //ID Flag
        ASSIGN(LSD_TitleOpt,_FIND(_opt,"_TITLE"),IMPORT);
    }
    if(LSD_TitleOpt == 1)
    {
        CARD("%-80s", TITLE);
    }
    COMMENT("$   TRANID");
    CARD("%10d", _ID_);
    SUBOBJECTS(transformations,/SUBOBJECT/TRANSFORMATION);
}