//
//INITIAL_FOAM_REFERENCE_GEOMETRY
//

ATTRIBUTES {
    //INPUT ATTRIBUTES
    ramptoggle            = VALUE(BOOL, "RAMP flag");

    ndtrrg = VALUE(INT, "Number of time steps taken for an element to restore its reference geometry");

    table_count         = SIZE("No. of nodes");   
    nodes_table_node    = ARRAY[table_count](NODE,"Node ID for which a reference configuration is defined");
    nodes_table_x       = ARRAY[table_count](FLOAT, "x-coordinate in reference configuration");
    nodes_table_y       = ARRAY[table_count](FLOAT, "y-coordinate in reference configuration");
    nodes_table_z       = ARRAY[table_count](FLOAT, "z-coordinate in reference configuration");
    
    //HM INTERNAL
    KEYWORD_STR         = VALUE(STRING,"Solver Keyword");
    ARG_TYPE5           = VALUE(STRING,"Options for card");
    
    IO_FLAG             = VALUE(INT, "Import/Export flag");
    _HMCOMMENTSFLAG     = VALUE(INT, "Write HM Comments");
    _HWCOLOR            = VALUE(INT, "Entity Color");  
    

}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //HM INTERNAL
    KEYWORD_STR                             = 9000;

    IO_FLAG=-1;
    _HMCOMMENTSFLAG=-1;
    _HWCOLOR=-1;
    ARG_TYPE5 = -1;
}

DEFINITIONS(COMMON) {
  IMPORT_PREDATA_TABULAR=(nodes_table_node);
} 

DEFAULTS(COMMON)
{
    //Card 1
    ndtrrg                              = 0;
    ramptoggle                            = FALSE;
    //Card 2
    table_count                         = 0;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*INITIAL_FOAM_REFERENCE_GEOMETRY");

    SIZE(table_count);
    ARRAY(table_count, "Reference nodes")
    {
       DATA(nodes_table_node);
       SCALAR(nodes_table_x, "X")        { DIMENSION = "l"; }
       SCALAR(nodes_table_y, "Y")        { DIMENSION = "l"; }
       SCALAR(nodes_table_z, "Z")        { DIMENSION = "l"; }
    }

    FLAG(ramptoggle);

    if(ramptoggle == TRUE)
    {
        ASSIGN(KEYWORD_STR, "_RAMP");
        SCALAR(ndtrrg, "NDTRRG")        { DIMENSION = "DIMENSIONLESS"; }
    }
}

// File format
FORMAT(Keyword971_R6.1)
{
    
    HEADER("*INITIAL_FOAM_REFERENCE_GEOMETRY");

    COMMENT("$    NID               X               Y               Z");    
    FREE_CARD_LIST(table_count)
    {
        CARD("%8d%16lg%16lg%16lg",nodes_table_node, nodes_table_x, nodes_table_y, nodes_table_z);
    }
}

FORMAT(Keyword971_R10.1){

    ASSIGN(IO_FLAG, 1, IMPORT);
    ASSIGN(IO_FLAG, 0, EXPORT);

    // card options reading
    if(IO_FLAG == 1)
    {
        HEADER("*INITIAL_FOAM_REFERENCE_GEOMETRY%5s", ARG_TYPE5);
    }  

    if(IO_FLAG == 1 && ARG_TYPE5 == "_RAMP")
    {
        ASSIGN(ramptoggle, 1, IMPORT); 
    }

    // card options writing 
    if(IO_FLAG == 0 && ramptoggle == FALSE) {
        HEADER("*INITIAL_FOAM_REFERENCE_GEOMETRY");
    }
    else if(IO_FLAG == 0 && ramptoggle == TRUE) {
        HEADER("*INITIAL_FOAM_REFERENCE_GEOMETRY_RAMP");
    }

    if( ramptoggle == TRUE) 
    {
        COMMENT("$   NDTRRG");
        CARD("%10d",ndtrrg);
    }
    COMMENT("$    NID               X               Y               Z");    
    FREE_CARD_LIST(table_count)
    {
        CARD("%8d%16lg%16lg%16lg",nodes_table_node, nodes_table_x, nodes_table_y, nodes_table_z);
    }
}
