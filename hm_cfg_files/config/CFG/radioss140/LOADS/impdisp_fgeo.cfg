//
// /IMPDISP/FGEO
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    // Card
    curveid                                 = VALUE(CURVE, "Time function identifier");
    rad_spring_part                         = VALUE(COMPONENT, "Spring part identifier");
    rad_sensor_id                           = VALUE(SENSOR, "Sensor identifier") {SUBTYPES=(/SENSOR/SENSOR_DEFINE);}

    xscale                                  = VALUE(FLOAT, "Abscissa scale factor for fct_ID");
    rad_tstart                              = VALUE(FLOAT, "Start time");
    rad_tstop                               = VALUE(FLOAT, "Stop time");
   
    distribution                            = VALUE(UINT,"Spring Specification");
    distribution_table_count                = SIZE("Number of additional nodes");
    rad_node_pos_X                          = ARRAY[distribution_table_count](FLOAT, "X coordinate");
    rad_node_pos_Y                          = ARRAY[distribution_table_count](FLOAT, "Y coordinate");
    rad_node_pos_Z                          = ARRAY[distribution_table_count](FLOAT, "Z coordinate");
    location_unit_node                      = ARRAY[distribution_table_count](NODE, "Additional nodes");
  
    displayname                             = VALUE(STRING, "Final geometry block title");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    NUM_COMMENTS                            = SIZE("NUM_COMMENTS");
    CommentEnumField                        = VALUE(INT, "User Comments");
    COMMENTS                                = ARRAY[NUM_COMMENTS](STRING, "Entity Comments");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

}

CHECK(COMMON)
{

}

DEFAULTS(COMMON)
{
    // Card
    xscale                                  = 1.0;
    rad_tstop                               = 10e30;
}

GUI(COMMON)
{

    RADIO(CommentEnumField)
    {
        ENUM_VALUE_FLAG=TRUE;
        ADD(1, "Hide in Menu/Export");
        ADD(2, "Show in Menu/Export");
        ADD(3, "Do Not Export");
    }
    if(CommentEnumField == 2)
    {
        SIZE(NUM_COMMENTS);
        ARRAY(NUM_COMMENTS,"")
        {
            SCALAR(COMMENTS);
        }
    }

    ASSIGN(KEYWORD_STR, "/IMPDISP/FGEO");

    RADIO(distribution, "Spring Specification")
    {
        ADD(0, "0: Spring part selection");
        ADD(1, "1: Final node posistions");
    }

    // Card
    DATA(curveid, "fct_ID");
  
    DATA(rad_spring_part, "part_ID");
    DATA(rad_sensor_id, "sens_ID");
  
    SCALAR(xscale, "Ascale")                 { DIMENSION = "t"; }
    SCALAR(rad_tstart, "Tstart")             { DIMENSION = "t"; }
    SCALAR(rad_tstop, "Tstop")               { DIMENSION = "t"; }

    if(distribution == 1)
    {
      SIZE(distribution_table_count);
      ARRAY(distribution_table_count, "No.of nodes")
      {
        DATA(location_unit_node, "node_IDN");
        SCALAR(rad_node_pos_X, "XN")         { DIMENSION = "l"; }
        SCALAR(rad_node_pos_Y, "YN")         { DIMENSION = "l"; }
        SCALAR(rad_node_pos_Z, "ZN")         { DIMENSION = "l"; }
      }
    }
}

// File format
FORMAT(radioss140)
{

    HEADER("/IMPDISP/FGEO/%d",_ID_);
    CARD("%-100s", displayname);

    //   Card
    COMMENT("#   fct_ID   part_ID             sens_ID");
    CARD("%10d%10d%10s%10d", curveid, rad_spring_part, _BLANK_, rad_sensor_id);

    COMMENT("#             Ascale                                  Tstart               Tstop");
    CARD("%20lg%20s%20lg%20lg", xscale, _BLANK_, rad_tstart, rad_tstop);

    FREE_CARD_LIST(distribution_table_count)
    {
       COMMENT("# node_IDN                  Xn                  Yn                  Zn");
       CARD("%10d%20lg%20lg%20lg", location_unit_node, rad_node_pos_X, rad_node_pos_Y, rad_node_pos_Z);
    }

    if(distribution_table_count > 0)
    {
      ASSIGN(distribution,1,IMPORT);
    }
    else
    {
      ASSIGN(distribution,0,IMPORT);
    }
}
