//
//CONTROL_IMPLICIT_EIGENVALUE
//

ATTRIBUTES(COMMON)
{
    KEYWORD_STR     = VALUE(STRING, "Solver Keyword");
    LSD_LCIDOpt     = VALUE(INT,"NEIG_option");
    LSD_LCID10      = VALUE(CURVE,"Curve ID used for intermittent eigenvalue analysis");
    LSD_NEIG        = VALUE(INT,"Number of eigenvalues to extract");
    EIGEN_CENTER    = VALUE(FLOAT,"Center frequency");
    EIGEN_LFLAG     = VALUE(INT,"Left end point finite flag");
    EIGEN_LFTEND    = VALUE(FLOAT,"Left end point of interval");
    EIGEN_RFLAG     = VALUE(INT,"Right end point finite flag");
    EIGEN_RHTEND    = VALUE(FLOAT,"Right end point of interval");
    EIGEN_EIGMTH    = VALUE(INT,"Eigenvalue extraction method");
    EIGEN_SHFSCL    = VALUE(FLOAT,"Shift scale");
    //Optional card 2
    optionalCards   = VALUE(INT, "Optional card 2");
    LSD_ISOLID      = VALUE(INT,"If nonzero, reset all solid element formulations to ISOLID for the implicit computations");
    LSD_IBEAM       = VALUE(INT,"If nonzero, reset all beam element formulations to IBEAM for the implicit computations");
    LSD_ISHELL      = VALUE(INT,"If nonzero, reset all shell element formulations to ISHELL for the implicit computations");
    LSD_ITSHELL     = VALUE(INT,"If nonzero, reset all thick shell element formulations to ITSHELL for the implicit computations");
    LSD_MSTRES      = VALUE(INT,"Flag for computing the stresses for the eigenmodes");
    LSD_EVDUMP      = VALUE(INT,"Flag for writing eigenvalues and eigenvectors to file Eigen_Vectors");
}


SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR     = 9000;
    LSD_LCIDOpt     = 5091;
    LSD_LCID10      = 1142;
    LSD_NEIG        = 3146;
    EIGEN_CENTER    = 4113;
    EIGEN_LFLAG     = 4114;
    EIGEN_LFTEND    = 4115;
    EIGEN_RFLAG     = 4116;
    EIGEN_RHTEND    = 4117;
    EIGEN_EIGMTH    = 4118;
    EIGEN_SHFSCL    = 4119;

    //Optional card 2
    optionalCards   = 4772;
    LSD_ISOLID      = 987;
    LSD_IBEAM       = 988;
    LSD_ISHELL      = 989;
    LSD_ITSHELL     = 990;
    LSD_MSTRES      = 991;
    LSD_EVDUMP      = 992;
}

DEFAULTS(COMMON)
{
    EIGEN_EIGMTH    = 2;
}


GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "*CONTROL_IMPLICIT_EIGENVALUE");
    FLAG(LSD_LCIDOpt);
    if (LSD_LCIDOpt != FALSE)
    {
        DATA(LSD_LCID10);
    }
    else
    {
        SCALAR(LSD_NEIG)  { DIMENSION="DIMENSIONLESS"; }
    }
    SCALAR(EIGEN_CENTER)  { DIMENSION="DIMENSIONLESS";}
    RADIO(EIGEN_LFLAG)
    {
        ADD(0,"0: Left end point is -infinity");
        ADD(1,"1: Left end point is LFTEND");
    }
    if (EIGEN_LFLAG==1){
        SCALAR(EIGEN_LFTEND) { DIMENSION ="DIMENSIONLESS";}
    }
    RADIO(EIGEN_RFLAG)
    {
        ADD(0,"0: Right end point is +infinity");
        ADD(1,"1: Right end point is RHTEND");
    }
    if (EIGEN_RFLAG==1){
        SCALAR(EIGEN_RHTEND) { DIMENSION="DIMENSIONLESS";}
    }
    RADIO(EIGEN_EIGMTH)
    {
        ADD(2,"2: Block Shift and Invert Lanczos (Default)");
        ADD(3,"3: Lanczos with [M] = [I] (for debug only)");
        ADD(5,"5: Same as 3 but include Dynamic Terms");
    }
    SCALAR(EIGEN_SHFSCL) { DIMENSION="DIMENSIONLESS";}
    FLAG(optionalCards,"Optional Card 2");
    if(optionalCards != 0)
    {
        SCALAR(LSD_ISOLID)  { DIMENSION ="DIMENSIONLESS";}
        SCALAR(LSD_IBEAM)   { DIMENSION ="DIMENSIONLESS";}
        SCALAR(LSD_ISHELL)  { DIMENSION ="DIMENSIONLESS";}
        SCALAR(LSD_ITSHELL) { DIMENSION ="DIMENSIONLESS";}
        SCALAR(LSD_MSTRES)  { DIMENSION ="DIMENSIONLESS";}
        SCALAR(LSD_EVDUMP)  { DIMENSION ="DIMENSIONLESS";}
    }
}

//File format
FORMAT(Keyword971)
{
    HEADER("*CONTROL_IMPLICIT_EIGENVALUE");
    COMMENT("$     NEIG    CENTER     LFLAG    LFTEND     RFLAG    RHTEND    EIGMTH    SHFSCL");
    CARD("%10d%10lg%10d%10lg%10d%10lg%10d%10lg",SCALAR_OR_FUNCTION(LSD_LCIDOpt,LSD_NEIG,LSD_LCID10),EIGEN_CENTER,EIGEN_LFLAG,EIGEN_LFTEND,EIGEN_RFLAG,EIGEN_RHTEND,EIGEN_EIGMTH,EIGEN_SHFSCL);

    if(optionalCards != 0)
        COMMENT("$   ISOLID     IBEAM    ISHELL   ITSHELL    MSTRES    EVDUMP");
    FREE_CARD(optionalCards,"%10d%10d%10d%10d%10d%10d",LSD_ISOLID,LSD_IBEAM,LSD_ISHELL,LSD_ITSHELL,LSD_MSTRES,LSD_EVDUMP);
}
