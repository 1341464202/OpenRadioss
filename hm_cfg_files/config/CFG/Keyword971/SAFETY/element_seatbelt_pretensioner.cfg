//
//ELEMENT_SEATBELT_PRETENSIONER
//


ATTRIBUTES(COMMON) {


  //SBPRID Pretensioner ID
  type     = VALUE(INT,"Pretensioner type");
  sensorid1     = VALUE(SAFETY_SENSOR,"Sensor 1");
  sensorid2     = VALUE(SAFETY_SENSOR,"Sensor 2");
  sensorid3     = VALUE(SAFETY_SENSOR,"Sensor 3");
  sensorid4     = VALUE(SAFETY_SENSOR,"Sensor 4");
  
  if(type==1 ||type==4 || type==5 || type==6 || type==8 ) 
  {
     retractor_spring_id = VALUE(RETRACTOR,"Retractor number");
  }
  //else if(type==2 || type==3 || type==9)
  //{
  //   retractor_spring_id2 = VALUE(SPRING,"Spring element number");
  //}
  
  pretensioner_time       = VALUE(FLOAT,"Time between sensor triggering and pretensioner acting");
  
  if(type==1 ||type==4 || type==5 || type==6 || type==8 || type==9)
  {
     curveid = VALUE(FUNCT,"Load curve for pretensioner");
  }
  
  if(type==5 || type==8)	
  {
     limitingforce     = VALUE(FLOAT,"Optional limiting force for retractor type 5 or 8");
  }
  
}

DEFINITIONS(COMMON) {
  _HMTYPE=(type);                       
}
DEFAULTS(COMMON) {

}


CHECK(COMMON) {
}


GUI(COMMON) {  
	
   RADIO(type) {
	ADD(1,"Pyrotechnic retractor with force limits");
	ADD(2,"Pre-loaded spring bcomes active");
	ADD(3,"Lock spring removed");
	ADD(4,"Force versus pretensioner_time retractor");
  	ADD(5,"Pyrotechnic retractor (old type in version 950) but wilh optional force limiter, limitingforce");
	ADD(6,"Combination of types 4 and 5");
	ADD(7,"Independent pretensioner/retractor");
	ADD(8,"Energy versus pretensioner_time retractor pretensioner with optional force limiter");
	ADD(9,"Energy versus pretensioner_time buckle or anchor pretensioner");
   }
	
	
   DATA(sensorid1);
   DATA(sensorid2);
   DATA(sensorid3);
   DATA(sensorid4);
	
   if(type==1 ||type==4 || type==5 || type==6 || type==7|| type==8 ) 
   {
      DATA(retractor_spring_id);
   } 
   else if(type==2 || type==3 || type==9)
   {
      DATA(retractor_spring_id);
   }
	
   SCALAR(pretensioner_time) {DIMENSION="t";}
	
  if(type==1 ||type==4 || type==5 || type==6  || type==7 || type==8 || type==9)
  {
      FUNCTION(curveid){X_TITLE="pretensioner_time after activation";Y_TITLE="Pull-in";}	
  }

  optional:
  if(type==5 || type==8)
  {
	SCALAR(limitingforce) {DIMENSION="force";}
  }
}
	
FORMAT(Keyword971_R7.1) {
  
  CARD("%10d%10d%10d%10d%10d%10d",_ID_,type,sensorid1,sensorid2,sensorid3,sensorid4);
  CARD("%10d%10lg%10d%10lg",retractor_spring_id,pretensioner_time,curveid,limitingforce);
}
	
FORMAT(Keyword971) {
  
  COMMENT("$   SBPRID    SBPRTY    SBSID1    SBSID2    SBSID3    SBSID4");
  CARD("%10d%10d%10d%10d%10d%10d",_ID_,type,sensorid1,sensorid2,sensorid3,sensorid4);
  if(type==1 ||type==4 || type==5 || type==6)
  {
      COMMENT("$    SBRID      TIME    PTLCID    LMTFRC");
      CARD("%10d%10lg%10d%10lg",retractor_spring_id,pretensioner_time,curveid,limitingforce);
  
  }
  else
  {
      if(type==2 || type==3)
      {
          COMMENT("$    SBSID      TIME              LMTFRC");
          CARD("%10d%10lg          %10lg",retractor_spring_id,pretensioner_time,limitingforce);
      }
      else
      {
          COMMENT("$               TIME              LMTFRC");
          CARD("          %10lg          %10lg",pretensioner_time,limitingforce);
      }
  }
}
