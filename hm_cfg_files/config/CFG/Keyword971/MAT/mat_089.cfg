// HWVERSION_2021.0.0.30_Dec 22 2020_19:07:29
// Copyright (c) 2020 Altair Engineering, Inc. All rights reserved.
// Contains trade secrets of Altair Engineering, Inc.
// Copyright notice does not imply publication.
//
// Material law 089
//

ATTRIBUTES(COMMON)
{

    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
    CommentEnumField                        = VALUE(INT,  "User Comments");
    Num_Comments                            = SIZE("No. of comment lines");    
    Comments                                = ARRAY[Num_Comments](STRING,  "Entity_Comments");
    E                                       = VALUE(FLOAT,  "E");
    LSDYNA_C                                = VALUE(FLOAT,  "C");
    LSDYNA_P                                = VALUE(FLOAT,  "P");
    LSD_DAMP                                = VALUE(FLOAT,  "DAMP");
    LSD_EFTX                                = VALUE(FLOAT,  "EFTX");
    LSD_LCFAIL                              = VALUE(FUNCT,  "LCFAIL");
    LSD_LCID                                = VALUE(FUNCT,  "LCSS");
    LSD_LCID8                               = VALUE(FUNCT,  "LCSR");
    LSD_RATEFAC                             = VALUE(FLOAT,  "RATEFAC");
    LSD_TitleOpt                            = VALUE(INT,  "Title");
    Nu                                      = VALUE(FLOAT,  "PR");
    Rho                                     = VALUE(FLOAT,  "Rho");

}

SKEYWORDS_IDENTIFIER(COMMON)
{

    KEYWORD_STR                             = 9000;
    CommentEnumField                        = 3220;
    Comments                                = 3100;
    E                                       = 119;
    LSDYNA_C                                = 197;
    LSDYNA_P                                = 198;
    LSD_DAMP                                = 3213;
    LSD_EFTX                                = 3212;
    LSD_LCFAIL                              = 3215;
    LSD_LCID                                = 45;
    LSD_LCID8                               = 224;
    LSD_RATEFAC                             = 3214;
    LSD_TitleOpt                            = 90;
    Nu                                      = 120;
    Num_Comments                            = 3101;
    Rho                                     = 118;

}

DRAWABLES(COMMON) {
public:
  MASS_DENSITY=SCALAR(Rho);
  YOUNG_MODULUS=SCALAR(E);
  POISSON_RATIO=SCALAR(Nu);
  STRAIN_RATE_PARAMETER_C=SCALAR(LSDYNA_C);
  STRAIN_RATE_PARAMETER_P=SCALAR(LSDYNA_P);
  FAILURE_FLAG=SCALAR(LSD_EFTX);
  STIFFNESS-PROPOTIONAL_DAMPING_RATIO=SCALAR(LSD_DAMP);
  FILTERING_FACTOR_FOR_STRAIN_RATE_EFFECTS=SCALAR(LSD_RATEFAC);
 public:
  //SOUND_SPEED is speed for ISDO = 0 and 1
  SOUND_SPEED       = EVAL((YOUNG_MODULUS/(MASS_DENSITY*(1-POISSON_RATIO*POISSON_RATIO)))^0.5);
  SOUND_SPEED_ISDO_2 = EVAL((YOUNG_MODULUS/MASS_DENSITY)^0.5);
 private:
  G                 = EVAL(YOUNG_MODULUS/(2*(1+POISSON_RATIO)));
  C1                = EVAL(YOUNG_MODULUS/(3*(1-2*POISSON_RATIO)));
 public:
  SOUND_SPEED_SOLID = EVAL(((4*G/3+C1)/MASS_DENSITY)^0.5);
}

GUI(COMMON)
{

     ASSIGN(KEYWORD_STR, "*MAT_PLASTICITY_POLYMER");
     RADIO(CommentEnumField)
     {
         ENUM_VALUE_FLAG=TRUE;
         ADD(1, "Hide in Menu/Export");
         ADD(2, "Show in Menu/Export");
         ADD(3, "Do not export");
     }
     if(CommentEnumField == 2)
     {  
        SIZE(Num_Comments);
        ARRAY(Num_Comments,"")
        {
           SCALAR(Comments);
        }
     }     
     FLAG(LSD_TitleOpt);
     if(LSD_TitleOpt == TRUE)
     {
             ASSIGN(KEYWORD_STR, "_TITLE");
     } 
 mandatory:
     SCALAR(Rho)                                {DIMENSION="density";}
     SCALAR(E)                                  {DIMENSION="pressure";}
 optional:
     SCALAR(Nu)                                 {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSDYNA_C)                           {DIMENSION="strain_rate";}
     SCALAR(LSDYNA_P)                           {DIMENSION="DIMENSIONLESS";}
 mandatory:
    FUNCTION(LSD_LCID)
    {
      X_TITLE = "Strain"; X_DIMENSION = "DIMENSIONLESS";
      Y_TITLE = "Stress"; Y_DIMENSION = "pressure";
      Z_TITLE = "Strain Rate"; Z_DIMENSION = "strain_rate";
    }
 optional:
     FUNCTION(LSD_LCID8)
     {
       X_TITLE = "Strain rate"; X_DIMENSION = "strain_rate";
       Y_TITLE = "Factor on Yield Stress"; Y_DIMENSION = "DIMENSIONLESS";
     }
     RADIO(LSD_EFTX)
     {
        ADD(0.0, "0.0: Failure determined by maximum tensile strain (default)");
        ADD(1.0, "1.0: Failure determined only by tensile strain in local x direction");
        ADD(2.0, "2.0: Failure determined only by tensile strain in local y direction");
     }
     SCALAR(LSD_DAMP)                           {DIMENSION="DIMENSIONLESS";}
     SCALAR(LSD_RATEFAC)                        {DIMENSION="DIMENSIONLESS";}
     FUNCTION(LSD_LCFAIL)
     {
       X_TITLE = "Log of strain rate"; X_DIMENSION = "DIMENSIONLESS";
       Y_TITLE = "Failure strain"; Y_DIMENSION = "DIMENSIONLESS";
     }
/*
    graphical SUPPORT("Part(s) to which material is applied") {
      OBJECTS=(/COMPONENT/SHELL,/COMPONENT/BRICK,/COMPONENT/TETRA4,/COMPONENT/3D_LIN,/COMPONENT/TSHELL);
      ADD(COMPONENT,"Parts");
    }
*/
}

// File format
FORMAT(Keyword971) 
{
    //
    COMMENT("$      MID       RHO         E        PR");
    CARD("%10d%10lg%10lg%10lg",_ID_,Rho,E,Nu);
    //
    COMMENT("$        C         P      LCSS      LCSR");
    CARD("%10lg%10lg%10d%10d",LSDYNA_C,LSDYNA_P,LSD_LCID,LSD_LCID8);
    //
    COMMENT("$     EFTX      DAMP   RATEFAC    LCFAIL");
    CARD("%10lg%10lg%10lg%10d",LSD_EFTX,LSD_DAMP,LSD_RATEFAC,LSD_LCFAIL);
    //
}
