// --- admesh_state_sh3n.cfg ---

ATTRIBUTES(COMMON)
{
    //INPUT ATTRIBUTES

    //Card 1
    NSH3N                                   = SIZE("SH3N ELEMENTS STATE");
    sh3n_ID                                 = ARRAY[NSH3N](ELEMS,  "3-Node shell identifier", "sh3n_ID")                                   { SUBTYPES = (/ELEMS/SH3N) ; }
    sh3n_ID1                                = ARRAY[NSH3N](ELEMS,  "First son identifier", "sh3n_ID1")                                     { SUBTYPES = (/ELEMS/SH3N) ; }
    sh3n_ID2                                = ARRAY[NSH3N](ELEMS,  "Second son identifier", "sh3n_ID2")                                    { SUBTYPES = (/ELEMS/SH3N) ; }
    sh3n_ID3                                = ARRAY[NSH3N](ELEMS,  "Third son identifier", "sh3n_ID3")                                     { SUBTYPES = (/ELEMS/SH3N) ; }
    sh3n_ID4                                = ARRAY[NSH3N](ELEMS,  "Fourth son identifier", "sh3n_ID4")                                    { SUBTYPES = (/ELEMS/SH3N) ; }
    Actlev                                  = ARRAY[NSH3N](INT,    "Actual level of 3-node shell sh3n_ID", "Actlev");
    IMapping                                = ARRAY[NSH3N](INT,    "Mapping flag or deletion at the beginning of this stage", "IMapping");

    //HM INTERNAL
    KEYWORD_STR                             = VALUE(STRING, "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    //Card 1
    NSH3N                                   = -1;
    sh3n_ID                                 = -1;
    sh3n_ID1                                = -1;
    sh3n_ID2                                = -1;
    sh3n_ID3                                = -1;
    sh3n_ID4                                = -1;
    Actlev                                  = -1;
    IMapping                                = -1;

    //HM INTERNAL
    KEYWORD_STR                             = 9000;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/ADMESH/STATE/SH3N");
    SIZE(NSH3N);
    ARRAY(NSH3N, "NIPPAR")
    {
        DATA(sh3n_ID,  "sh3n_ID");
        DATA(sh3n_ID1, "sh3n_ID1");
        DATA(sh3n_ID2, "sh3n_ID2");
        DATA(sh3n_ID3, "sh3n_ID3");
        DATA(sh3n_ID4, "sh3n_ID4");

        SCALAR(Actlev, "Actlev")                { DIMENSION = "DIMENSIONLESS" ; }

        RADIO(IMapping, "IMapping")
        {
            ADD(-1, "-1: The 3-node shell and all the shells coming from it are deleted");
            ADD(0, "0: The element is not deleted and no element is activated at a deeper level, unless it was already active in the previous stage");
            ADD(1, "1: Some 3-node shells will be activated at a deeper level, but were not previously");
        }
    }
}

// File format
FORMAT(radioss90)
{
    HEADER("/ADMESH/STATE/SH3N");

    //Card 1
    if(NSH3N!=0)
    {
        COMMENT("#  sh3n_ID  sh3n_ID1  sh3n_ID2  sh3n_ID3  sh3n_ID4    Actlev  IMapping");
    }
    FREE_CARD_LIST(NSH3N)
    {
        CARD("%10d%10d%10d%10d%10d%10d%10d", sh3n_ID, sh3n_ID1, sh3n_ID2, sh3n_ID3, sh3n_ID4, Actlev, IMapping);
    }
}