//
// Merge Rigid body Setup File
// 

// MCDS attributes description
ATTRIBUTES(COMMON) {
  M_TYPE              = VALUE(INT,   "Main rigid body type flag", "M_type");
  S_TYPE              = VALUE(INT,   "Secondary entity type flag","S_type");
  IFLAG               = VALUE(INT,   "Merge option flag",          "Iflag");
// Support
  independentid       = VALUE(MULTIOBJECT, "Rigid Body main",     "Main_ID")  { SUBTYPES = (/RIGIDBODY /*, /NODE, /SETS/GRNOD, /COMPONENT , /SETS/GRPART */ ); } 
  independentid_type  = VALUE(STRING, "Type of multi object");
  dependentid         = VALUE(MULTIOBJECT, "Rigid Body secondary","Secon_ID"){ SUBTYPES = (/RIGIDBODY, /NODE, /SETS/GRNOD/*, /COMPONENT , /SETS/GRPART */); } 
  dependentid_type    = VALUE(STRING, "Type of multi object");
// HM INTERNAL
  IO_FLAG       =  VALUE(INT, "Import/Export flag");
}
/*
DEFINITIONS(COMMON) {
  MAINS=(NODE);
}*/
SKEYWORDS_IDENTIFIER(COMMON)
{
    M_TYPE          = -1;
    S_TYPE          = -1;
    IFLAG           = -1;
    IO_FLAG         = -1;
    independentid_type=-1;
    dependentid_type=-1;
//
    independentid               = -1;
    dependentid                = -1;
}

// Defaults

DEFAULTS(COMMON) {
  M_TYPE=1;
  S_TYPE = 1;
  IO_FLAG = 0;
  IFLAG=2;
}

// Check description

CHECK(COMMON) {
 /* IKREM >= 0;
  IKREM <= 1;*/
}

// GUI
GUI(COMMON) {

optional:
        graphical RADIO(M_TYPE,"Main rigid body type flag ") {
          ADD(0,"0: set to 1");
          ADD(1,"1: Default, Main is a /RBODY. ");
        }
mandatory:
        DATA(independentid);
        ASSIGN(independentid_type, RIGIDBODY); 
optional:
        graphical RADIO(S_TYPE,"Secondary entity type flag ") {
          ADD(0, "0:set to 1");
          ADD(1, "1: Default, Secondary is a /RBODY.");
          ADD(2, "2: Secondary is a node ID.");
          ADD(3, "3: Secondary is a node group (/GRNOD) identifier.");
        }

mandatory:
    DATA(dependentid);
    if(S_TYPE==3) 
    {
        ASSIGN(dependentid_type, SETS); 
    }
    else if(S_TYPE==2) 
    {
        ASSIGN(dependentid_type, NODE); 
    }
    else
    {
        ASSIGN(dependentid_type, RIGIDBODY); 
    }
    optional:
      RADIO(IFLAG,"Inertia") {
          ADD(0, "0: set to 2");
          ADD(1, "1: Mass and inertia of the secondary entity is ignored. Main rigid body node position is based on Icog flag defined in the main rigid body.");
          ADD(2, "2: Default, Mass and inertia of the secondary entity are added to the main rigid body.  Main node position is moved to the new center of mass.");
          ADD(3, "3: Mass and inertia of the secondary entity is added to the main rigid body.  Main node position is not moved.");
        }
}


FORMAT(radioss2020) 
{
    ASSIGN(IO_FLAG,1,IMPORT);
    CARD("%10d%10d%10d%10d%10d",independentid,M_TYPE,dependentid,S_TYPE,IFLAG);
    if(IO_FLAG == 1) {
        ASSIGN(independentid_type, RIGIDBODY, IMPORT); 
    }
    if(IO_FLAG == 1 && S_TYPE==3) 
    {
        ASSIGN(dependentid_type, SETS, IMPORT); 
    }
    else if(IO_FLAG == 1 && S_TYPE==2) 
    {
        ASSIGN(dependentid_type, NODE, IMPORT); 
    }
    else if(IO_FLAG == 1)
    {
        ASSIGN(dependentid_type, RIGIDBODY, IMPORT); 
    }
}