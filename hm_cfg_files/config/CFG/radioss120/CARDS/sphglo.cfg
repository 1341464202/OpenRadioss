ATTRIBUTES(COMMON)
{
    ALPHA2                  = VALUE(FLOAT,  "Security coefficient on search for neighbors");
    ALE_MAXSPH              = VALUE(INT,  "Maximum number of ghost particles allowed to be created at one time");
    ALE_KVOISPH             = VALUE(INT,  "Maximum number of neighbors to be taken into account for the SPH approximation");
    ALE_Form                = VALUE(INT,  "Maximum number of neighbors");
    /* ================================ HM =================================*/
    IO_FLAG                 = VALUE(INT, "");
    KEYWORD_STR             = VALUE(STRING, "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR             = 9000;
    ALPHA2                  = 6146;
    ALE_MAXSPH              = 4324;
    ALE_KVOISPH             = 4325;
    ALE_Form                = 4336;
    IO_FLAG                 = -1;
    KEYWORD_STR             = -1;
}

CHECK(COMMON)
{
    ALPHA2                  <=0.5;
}

DEFAULTS(COMMON)
{
    ALPHA2                  = 0.25;
    ALE_Form                = 120;
    ALE_KVOISPH             = 120;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "/SPHGLO");
    SEPARATOR("SPHGLO");
    SCALAR(ALPHA2)      { DIMENSION="DIMENSIONLESS"; }
    SCALAR(ALE_MAXSPH)  { DIMENSION="DIMENSIONLESS"; }
    SCALAR(ALE_KVOISPH) { DIMENSION="DIMENSIONLESS"; }
    SCALAR(ALE_Form)    { DIMENSION="DIMENSIONLESS"; }
    SEPARATOR("");
}

FORMAT(radioss120)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);
    
    /* Added seprately for HEADER work aroud*/
    if(IO_FLAG == 0)
    {
        HEADER ("/SPHGLO");
        COMMENT("#         Alpha_sort    Maxsph    Lneigh    Nneigh");
        CARD ("%20lg%10d%10d%10d",ALPHA2,ALE_MAXSPH,ALE_KVOISPH,ALE_Form);
    }
    else
    {
        CARD ("%20lg%10d%10d%10d",ALPHA2,ALE_MAXSPH,ALE_KVOISPH,ALE_Form);
    }
}

FORMAT(radioss51)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);
    
    /* Added seprately for HEADER work aroud*/
    if(IO_FLAG == 0)
    {
        HEADER ("/SPHGLO");
        COMMENT("#         Alpha_sort    Maxsph    Lneigh");
        CARD ("%20lg%10d%10d",ALPHA2,ALE_MAXSPH,ALE_KVOISPH);
    }
    else
    {
        CARD ("%20lg%10d%10d",ALPHA2,ALE_MAXSPH,ALE_KVOISPH);
    }
}