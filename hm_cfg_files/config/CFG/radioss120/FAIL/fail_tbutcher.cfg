//
// Failure model, Tuler-Butcher (TBUTCHER) Setup File
// 

ATTRIBUTES(COMMON){ 

	_HMCOMMENTSFLAG  		= VALUE(INT, "Write HM Comments");
	mat_id           		= VALUE(MAT,  "Material");


	Lambda					= VALUE(FLOAT,"Exponent");
	K						= VALUE(FLOAT,"Critical damage integral");
	Sigma_r					= VALUE(FLOAT,"Fracture stress");
	Ifail_sh				= VALUE(INT,  "Shell failure flag");
	Ifail_so				= VALUE(INT,  "Flag for solid failure model");
	Iduct					= VALUE(INT,  "Ductile-brittle materials flag");
	Ixfem					= VALUE(INT,  "XFEM flag ");
	
	a_TBUTCHER_XFEMTBUTC	= VALUE(FLOAT, "Brittle rupture material parameter A (exponent)");
	b_TBUTCHER_XFEMTBUTC	= VALUE(FLOAT, "Brittle rupture material parameter B (exponent)");
	Dadv					= VALUE(FLOAT,  "Criterion for the crack advancement");
    // HM INTERNAL
    KEYWORD_STR                                 = VALUE(STRING,"Solver Keyword");

}

SKEYWORDS_IDENTIFIER(COMMON)
{
        // HM INTERNAL
    KEYWORD_STR                                 = 9000;
	_HMCOMMENTSFLAG=-1;
	
}

/*
DEFINITIONS(COMMON) {
  SUPPORTING=(MAT);
}
*/

CHECK(COMMON) {
  Dadv >= 0.0;
  Dadv <= 1.0;
}

GUI(COMMON) {
  ASSIGN(KEYWORD_STR, "/FAIL/TBUTCHER/");
mandatory:
  DATA(mat_id);
optional:
  SCALAR(Lambda)     { DIMENSION = "DIMENSIONLESS"; }
  SCALAR(K)          { DIMENSION = "dynamicviscosity"; }
  SCALAR(Sigma_r)    { DIMENSION = "pressure"; }
  //
  RADIO(Ifail_sh) {
    ADD(0,"0: Default");
    ADD(1,"1: Shell is deleted if D greater-than K for 1 integ. point or layer");
    ADD(2,"2: Stress tensor is set to 0 if D greater-than K and shell is deleted if D greater-than K for all integ. points or layers");
  }
  RADIO(Ifail_so) {
    ADD(0,"0: Default");
    ADD(1,"1: Solid is deleted if D greater-than K for 1 integ. point");
    ADD(2,"2: For each integ. point, deviatoric stress tension is vanished if D greater-than K");
  }
  RADIO(Iduct) {
    ADD(0,"0: Default");
    ADD(1,"1: if a ductile material is used");
    ADD(2,"2: if a brittle material is used (shell only)");
  }
  RADIO(Ixfem) {
    ADD(0,"0: Without XFEM");
    ADD(1,"1: XFEM formulation ");
  }
  SCALAR(a_TBUTCHER_XFEMTBUTC)          { DIMENSION = "DIMENSIONLESS"; }
  SCALAR(b_TBUTCHER_XFEMTBUTC)          { DIMENSION = "DIMENSIONLESS"; }
  if (Ixfem==1) {
       SCALAR(Dadv);
  }
}


FORMAT(radioss120) {
    HEADER("/FAIL/TBUTCHER/%d",mat_id);

    COMMENT("#             LAMBDA                   K             SIGMA_R  IFAIL_SH  IFAIL_SO     IDUCT     IXFEM");
    CARD("%20lg%20lg%20lg%10d%10d%10d%10d",Lambda,K,Sigma_r,Ifail_sh,Ifail_so,Iduct,Ixfem);
    COMMENT("#                  A                   B");
    CARD("%20lg%20lg",a_TBUTCHER_XFEMTBUTC,b_TBUTCHER_XFEMTBUTC);  
}

FORMAT(radioss51) {
    HEADER("/FAIL/TBUTCHER/%d",mat_id);

    COMMENT("#             LAMBDA                   K             SIGMA_R  IFAIL_SH  IFAIL_SO");
    CARD("%20lg%20lg%20lg%10d%10d",Lambda,K,Sigma_r,Ifail_sh,Ifail_so);
}
